#div{
  width: 400px;
  height: 600px;
  background-color: #ccc;
  display: flex;
  /* flex-direction: column; 控制主轴的方向 */
  /* row（默认值）： 主轴为水平方向，起点在左端；

  row-reverse： 主轴在水平方向，起点在右端 ；

  column：主轴为垂直方向，起点在上沿。

  column-reverse：主轴为垂直方向，起点在下沿。 */

  flex-wrap: nowrap;

  /* flex-wrap属性定义，如果一条轴线排不下，如何换行。

            nowrap（默认）：不换行。当容器宽度不够时，每个项目会被挤压宽度；

            wrap： 换行，并且第一行在容器最上方；

            wrap-reverse： 换行，并且第一行在容器最下方。 */

    justify-content: center;
            /* justify-content属性定义了项目在主轴上的对齐方式。

            >>> 此属性与主轴方向息息相关。

 主轴方向为：row-起点在左边，row-reverse-起点在右边， column-起点在上边，column-reverse-起点在下边

            flex-start（默认值）： 项目位于主轴起点。

            flex-end：项目位于主轴终点。

            center： 居中

            space-between：两端对齐，项目之间的间隔都相等。(开头和最后的项目，与父容器边缘没有间隔)

            space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。(开头和最后的项目，与父容器边缘有一定的间隔) */

  align-items: center;

  /* align-items属性定义项目在交叉轴上如何对齐。

            flex-start：交叉轴的起点对齐。

            flex-end：交叉轴的终点对齐。

            center：交叉轴的中点对齐。

            baseline: 项目的第一行文字的基线对齐。(文字的行高、字体大小会影响每行的基线)

            stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。 */



            /* align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。

            (当项目换为多行时，可使用align-content取代align-items)

                      flex-start：与交叉轴的起点对齐。

                      flex-end：与交叉轴的终点对齐。

                      center：与交叉轴的中点对齐。

                      space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。

                      space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。

                      stretch（默认值）：轴线占满整个交叉轴。 */
}
#div div{
  width: 50px;
  height: 50px;
  line-height: 50px;
  background-color: pink;
  color: white;
  font-size: 30px;
  margin: 10px;
}
